C51 COMPILER V9.00   ST7565                                                                12/26/2017 17:39:35 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE ST7565
OBJECT MODULE PLACED IN st7565.OBJ
COMPILER INVOKED BY: E:\KeiluVision4\C51\BIN\C51.EXE st7565.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"st7565.h"
   2          
   3          /*******************************************************************************
   4          * 函 数 名         : LCD12864_WriteCmd
   5          * 函数功能                 : 写入一个命令到12864
   6          * 输    入         : cmd
   7          * 输    出         : 无
   8          *******************************************************************************/
   9          
  10          void LcdSt7565_WriteCmd(cmd)
  11          {
  12   1              LCD12864_CS = 0;           //chip select,打开片选
  13   1              LCD12864_RD = 1;           //disable read，读失能       
  14   1              LCD12864_RS = 0;       //select command，选择命令
  15   1              LCD12864_RW = 0;       //select write，选择写模式
  16   1              _nop_();
  17   1              _nop_();
  18   1      
  19   1              DATA_PORT = cmd; //put command，放置命令
  20   1              _nop_();
  21   1              _nop_();
  22   1      
  23   1              LCD12864_RW = 1;           //command writing ，写入命令
  24   1      }
  25          
  26          /*******************************************************************************
  27          * 函 数 名         : LcdSt7565_WriteData
  28          * 函数功能                 : 写入一个数据到12864
  29          * 输    入         : dat
  30          * 输    出         : 无
  31          *******************************************************************************/
  32          
  33          void LcdSt7565_WriteData(dat)
  34          {       
  35   1              LCD12864_CS = 0;           //chip select，打开片选
  36   1              LCD12864_RD = 1;           //disable read，读失能       
  37   1              LCD12864_RS = 1;       //select data，选择数据
  38   1              LCD12864_RW = 0;       //select write，选择写模式
  39   1              _nop_();
  40   1              _nop_();
  41   1      
  42   1              DATA_PORT = dat;       //put data，放置数据
  43   1              _nop_();
  44   1              _nop_();
  45   1      
  46   1              LCD12864_RW = 1;           //data writing，写数据 
  47   1      }
  48          /*******************************************************************************
  49          * 函 数 名         : LCD12864_Init
  50          * 函数功能                 : 初始化12864
  51          * 输    入         : 无
  52          * 输    出         : 无
  53          * 说    明         : LCD12864的命令指令可以查看例程文件夹下的《ST7565p数据手册》
  54          *                  * 的第51页的位置。
  55          *******************************************************************************/
C51 COMPILER V9.00   ST7565                                                                12/26/2017 17:39:35 PAGE 2   

  56          
  57          void Lcd12864_Init()
  58          {
  59   1              uchar i;
  60   1              LCD12864_RSET = 0;
  61   1              for (i=0; i<100; i++);
  62   1              LCD12864_CS = 0;
  63   1              LCD12864_RSET = 1;
  64   1              
  65   1              //----------------Star Initial Sequence-------//
  66   1              //------程序初始化设置，具体命令可以看文件夹下---//
  67   1      
  68   1              //--软件初始化--//
  69   1              LcdSt7565_WriteCmd(0xE2);  //reset
  70   1              for (i=0; i<100; i++);     //延时一下
  71   1      
  72   1              //--表格第8个命令，0xA0段（左右）方向选择正常方向（0xA1为反方向）--//
  73   1              LcdSt7565_WriteCmd(0xA1);  //ADC select segment direction 
  74   1              
  75   1              //--表格第15个命令，0xC8普通(上下)方向选择选择反向，0xC0为正常方向--// 
  76   1              LcdSt7565_WriteCmd(0xC8);  //Common direction 
  77   1                                
  78   1              //--表格第9个命令，0xA6为设置字体为黑色，背景为白色---//
  79   1              //--0xA7为设置字体为白色，背景为黑色---//
  80   1              LcdSt7565_WriteCmd(0xA6);  //reverse display
  81   1      
  82   1              //--表格第10个命令，0xA4像素正常显示，0xA5像素全开--//
  83   1              LcdSt7565_WriteCmd(0xA4);  //normal display
  84   1              
  85   1              //--表格第11个命令，0xA3偏压为1/7,0xA2偏压为1/9--//
  86   1              LcdSt7565_WriteCmd(0xA2);  //bias set 1/9
  87   1              
  88   1              //--表格第19个命令，这个是个双字节的命令，0xF800选择增压为4X;--//
  89   1              //--0xF801,选择增压为5X，其实效果差不多--//     
  90   1              LcdSt7565_WriteCmd(0xF8);  //Boost ratio set
  91   1              LcdSt7565_WriteCmd(0x01);  //x4
  92   1              
  93   1              //--表格第18个命令，这个是个双字节命令，高字节为0X81，低字节可以--//
  94   1              //--选择从0x00到0X3F。用来设置背景光对比度。---/
  95   1              LcdSt7565_WriteCmd(0x81);  //V0 a set
  96   1              LcdSt7565_WriteCmd(0x23);
  97   1      
  98   1              //--表格第17个命令，选择调节电阻率--//
  99   1              LcdSt7565_WriteCmd(0x25);  //Ra/Rb set
 100   1              
 101   1              //--表格第16个命令，电源设置。--//
 102   1              LcdSt7565_WriteCmd(0x2F);
 103   1              for (i=0; i<100; i++);
 104   1      
 105   1              //--表格第2个命令，设置显示开始位置--//
 106   1              LcdSt7565_WriteCmd(0x40);  //start line
 107   1      
 108   1              //--表格第1个命令，开启显示--//
 109   1              LcdSt7565_WriteCmd(0xAF);  // display on
 110   1              for (i=0; i<100; i++);
 111   1      
 112   1      }
 113          
 114          /*******************************************************************************
 115          * 函 数 名         : LCD12864_ClearScreen
 116          * 函数功能                 : 清屏12864
 117          * 输    入         : 无
C51 COMPILER V9.00   ST7565                                                                12/26/2017 17:39:35 PAGE 3   

 118          * 输    出         : 无
 119          *******************************************************************************/
 120          
 121          void Lcd12864_ClearScreen(void)
 122          {
 123   1              uchar i, j;
 124   1      
 125   1              for(i=0; i<8; i++)
 126   1              {
 127   2                      //--表格第3个命令，设置Y的坐标--//
 128   2                      //--Y轴有64个，一个坐标8位，也就是有8个坐标--//
 129   2                      //所以一般我们使用的也就是从0xB0到0x07,就够了--//       
 130   2                      LcdSt7565_WriteCmd(0xB0+i); 
 131   2      
 132   2                      //--表格第4个命令，设置X坐标--//
 133   2                      //--当你的段初始化为0xA1时，X坐标从0x10,0x04到0x18,0x04,一共128位--//
 134   2                      //--当你的段初始化为0xA0时，X坐标从0x10,0x00到0x18,0x00,一共128位--//
 135   2                      //--在写入数据之后X坐标的坐标是会自动加1的，我们初始化使用0xA0所以--//
 136   2                      //--我们的X坐标从0x10,0x00开始---//
 137   2                      LcdSt7565_WriteCmd(0x10); 
 138   2                      LcdSt7565_WriteCmd(0x04);                                                          
 139   2                      
 140   2                      //--X轴有128位，就一共刷128次，X坐标会自动加1，所以我们不用再设置坐标--//
 141   2                      for(j=0; j<128; j++)
 142   2                      {
 143   3                              LcdSt7565_WriteData(0x00);  //如果设置背景为白色时，清屏选择0XFF
 144   3                      }
 145   2              }
 146   1      }
 147          
 148          /*******************************************************************************
 149          * 函 数 名         : LCD12864_Write16CnCHAR
 150          * 函数功能                 : 在12864上面书写16X16的汉字
 151          * 输    入         : x, y, cn
 152          * 输    出         : 无
 153          * 说    明                 : 该函数可以直接书写字符串，但是书写是从右到左，所以输入的时
 154          *                  * 侯注意输入。汉字的取模方式请观看文件夹下的《汉字取模软件的
 155          *                  * 使用说明》
 156          *******************************************************************************/
 157          
 158          #ifdef  CHAR_CODE
              
              #include"charcode.h"
              
              uchar Lcd12864_Write16CnCHAR(uchar x, uchar y, uchar *cn)
              {
                      uchar j, x1, x2, wordNum;
              
                      //--Y的坐标只能从0到7，大于则直接返回--//
                      if(y > 7)
                      {
                              return 0;
                      }
              
                      //--X的坐标只能从0到128，大于则直接返回--//
                      if(x > 128)
                      {
                              return 0;
                      }
                      y += 0xB0;         //求取Y坐标的值
                      //--设置Y坐标--//
                      LcdSt7565_WriteCmd(y);
C51 COMPILER V9.00   ST7565                                                                12/26/2017 17:39:35 PAGE 4   

                      while ( *cn != '\0')     //在C语言中字符串结束以‘\0’结尾
                      {       
                      
                              //--设置Y坐标--//
                              LcdSt7565_WriteCmd(y);
              
                              x1 = (x >> 4) & 0x0F;   //由于X坐标要两句命令，分高低4位，所以这里先取出高4位
                              x2 = x & 0x0F;          //去低四位
                              //--设置X坐标--//
                              LcdSt7565_WriteCmd(0x10 + x1);   //高4位
                              LcdSt7565_WriteCmd(0x04 + x2);  //低4位
              
                              for (wordNum=0; wordNum<50; wordNum++)
                              {
                                  //--查询要写的字在字库中的位置--//
                                      if ((CN16CHAR[wordNum].Index[0] == *cn)
                                           &&(CN16CHAR[wordNum].Index[1] == *(cn+1)))
                                      {
                                              for (j=0; j<32; j++) //写一个字
                                              {               
                                                      if (j == 16)     //由于16X16用到两个Y坐标，当大于等于16时，切换坐标
                                                      {
                                                              //--设置Y坐标--//
                                                              LcdSt7565_WriteCmd(y + 1);
                                      
                                                              //--设置X坐标--//
                                                              LcdSt7565_WriteCmd(0x10 + x1);   //高4位
                                                              LcdSt7565_WriteCmd(0x04 + x2);  //低4位
                                                      }
                                                      LcdSt7565_WriteData(CN16CHAR[wordNum].Msk[j]);
                                              }
                                              x += 16;
                                      }//if查到字结束         
                              } //for查字结束 
                              cn += 2;
                      }       //while结束
                      return 1;
              }
              
              #endif
 220          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    182    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
